"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from django.utils.translation import gettext_lazy as _
from django.urls import reverse_lazy

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-r77!$2#2q)kaw4a^%8oe94^re#i(-89_v3_2==&k779fba@)kc'
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    "unfold",  # before django.contrib.admin
    "unfold.contrib.filters",  # optional, if special filters are needed
    "unfold.contrib.forms",  # optional, if special form elements are needed
    "unfold.contrib.inlines",  # optional, if special inlines are needed
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'drf_yasg',
    "rest_framework",

    'userapp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Asia/Tashkent'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'






UNFOLD = {
    "SITE_TITLE": "ALPHA",
    "SITE_HEADER": "ALPHA",
    "SITE_SUBHEADER": "ADMINISTRATION",
     "COLORS": {
        "primary": {
            "50": "240, 248, 255",   # –æ—á–µ–Ω—å —Å–≤–µ—Ç–ª—ã–π –≥–æ–ª—É–±–æ–π (–ø–æ—á—Ç–∏ –±–µ–ª—ã–π)
            "100": "210, 230, 255",  # –Ω–µ–∂–Ω–æ-–≥–æ–ª—É–±–æ–π
            "200": "175, 210, 250",  # —Å–≤–µ—Ç–ª—ã–π –≥–æ–ª—É–±–æ–π
            "300": "130, 180, 240",  # —Å–ø–æ–∫–æ–π–Ω—ã–π –≥–æ–ª—É–±–æ–π
            "400": "80, 150, 230",   # –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –≥–æ–ª—É–±–æ–π
            "500": "37, 99, 235",    # –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏–Ω–∏–π (–∫–∞–∫ tailwind blue-600)
            "600": "30, 80, 200",    # –±–æ–ª–µ–µ —Ç—ë–º–Ω—ã–π –∞–∫—Ü–µ–Ω—Ç
            "700": "25, 65, 160",    # –≥–ª—É–±–æ–∫–∏–π —Å–∏–Ω–∏–π
            "800": "20, 50, 120",    # —Ç—ë–º–Ω–æ-—Å–∏–Ω–∏–π
            "900": "15, 35, 85",     # –ø–æ—á—Ç–∏ navy
            "950": "10, 20, 45",     
            },
    },
    "SIDEBAR": {
        "show_search": False,       # Search in applications and models names
        "command_search": False,    # Replace the sidebar search with the command search
        "show_all_applications": False,  # Dropdown with all applications and models
        "navigation": [
            # {
            #     "title": _("DEPARTMENTS"),
            #     "separator": True,   # Top border
            #     "collapsible": True, # Collapsible group of links
            #     "items": [
            #         {
            #             "title": _("News"),
            #             "icon": "note_stack",  # Supported icon set: https://fonts.google.com/icons
            #             "link": reverse_lazy("admin:unfoldapp_news_changelist"),
            #             "permission": lambda request: request.user.is_superuser,
            #         },
            #         {
            #             "title": _("Category"),
            #             "icon": "format_list_bulleted",
            #             "link": reverse_lazy("admin:unfoldapp_category_changelist"),
            #         },
            #     ],
            # },
            {
                "title": _("USERS & GROUPS"),
                "separator": True,   # Top border
                "collapsible": True, # Collapsible group of links
                "items": [
                    {
                        "title": _("Users"),
                        "icon": "person",
                        "link": reverse_lazy("admin:userapp_user_changelist"),
                        "permission": lambda request: request.user.is_superuser,

                    },
                    {
                        "title": _("Groups"),
                        "icon": "group",
                        "link": reverse_lazy("admin:auth_group_changelist"),
                        "permission": lambda request: request.user.is_superuser,

                    },
                    
                ],
            },
        ],
    },

}


AUTH_USER_MODEL = "userapp.User"


# REST_FRAMEWORK = {
#     "DEFAULT_AUTHENTICATION_CLASSES": [
#         "rest_framework_simplejwt.authentication.JWTAuthentication",  # üëà –Ω–∞–ø—Ä–∏–º–µ—Ä
#     ],
# }
